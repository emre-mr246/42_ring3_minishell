[1;33m-== all object files deleted! ==-[0m
[1;31m-== all files deleted! ==-[0m
[1;32m-== minishell created! ==-[0m
valgrind --suppressions=misra.supp --leak-check=full --show-leak-kinds=all --track-origins=yes --trace-children=yes --track-fds=yes ./minishell
 Memcheck, a memory error detector
 Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
 Using Valgrind-3.22.0.GIT-lbmacos and LibVEX; rerun with -h for copyright info
 Command: ./minishell
 
[1;31mRaRe[0m:[1;34m/Users/mitasci/Desktop/eskimini[0m$  <<< "echo hello world" <<< "echo "hello world"" <<< "echo 'hello world'" <<< "echo hello'world'" <<< "echo hello""world" <<< "echo ''" <<< "echo "$PWD"" <<< "echo '$PWD'" <<< "echo "aspas ->'"" <<< "echo "aspas -> ' "" <<< "echo 'aspas ->"'" <<< "echo 'aspas -> " '" <<< "echo "> >> < * ? [ ] | ; [ ] || && ( ) & # $ \ <<"" <<< "echo '> >> < * ? [ ] | ; [ ] || && ( ) & # $ \ <<'" <<< "echo "exit_code ->$? user ->$USER home -> $HOME"" <<< "echo 'exit_code ->$? user ->$USER home -> $HOME'" <<< "echo "$"" <<< "echo '$'" <<< "echo $" <<< "echo $?" <<< "echo $?HELLO" <<< "pwd" <<< "pwd oi" <<< "export hello" <<< "export HELLO=123" <<< "export A-" <<< "export HELLO=123 A" <<< "export HELLO="123 A-"" <<< "export hello world" <<< "export HELLO-=123" <<< "export =" <<< "export 123" <<< "unset" <<< "unset HELLO" <<< "unset HELLO1 HELLO2" <<< "unset HOME" <<< "unset PATH" <<< "unset SHELL" <<< "cd $PWD" <<< "cd $PWD hi " <<< "cd 123123" <<< "$PWD" <<< "$EMPTY" <<< "$EMPTY echo hi" <<< "./test_files/invalid_permission" <<< "./missing.out" <<< "missing.out" <<< ""aaa"" <<< "test_files" <<< "./test_files" <<< "/test_files" <<< "minishell.h" <<< "$" <<< "$?" <<< "README.md" <<< "env | sort | grep -v SHLVL | grep -v ^_" <<< "cat ./test_files/infile_big | grep oi" <<< "cat minishell.h | grep ");"$" <<< "export GHOST=123 | env | grep GHOST" <<< "grep hi <./test_files/infile" <<< "grep hi "<infile" <         ./test_files/infile" <<< "echo hi < ./test_files/infile bye bye" <<< "grep hi <./test_files/infile_big <./test_files/infile" <<< "echo <"./test_files/infile" "bonjour       42"" <<< "cat <"./test_files/file name with spaces"" <<< "cat <./test_files/infile_big ./test_files/infile" <<< "cat <"1""2""3""4""5"" <<< "echo <"./test_files/infile" <missing <"./test_files/infile"" <<< "echo <missing <"./test_files/infile" <missing" <<< "cat <"./test_files/infile"" <<< "echo <"./test_files/infile_big" | cat <"./test_files/infile"" <<< "echo <"./test_files/infile_big" | cat "./test_files/infile"" <<< "echo <"./test_files/infile_big" | echo <"./test_files/infile"" <<< "echo hi | cat <"./test_files/infile"" <<< "echo hi | cat "./test_files/infile"" <<< "cat <"./test_files/infile" | echo hi" <<< "cat <"./test_files/infile" | grep hello" <<< "cat <"./test_files/infile_big" | echo hi" <<< "cat <missing" <<< "cat <missing | cat" <<< "cat <missing | echo oi" <<< "cat <missing | cat <"./test_files/infile"" <<< "echo <123 <456 hi | echo 42" <<< "ls >./outfiles/outfile01" <<< "ls >         ./outfiles/outfile01" <<< "echo hi >         ./outfiles/outfile01 bye" <<< "ls >./outfiles/outfile01 >./outfiles/outfile02" <<< "ls >./outfiles/outfile01 >./test_files/invalid_permission" <<< "ls >"./outfiles/outfile with spaces"" <<< "ls >"./outfiles/outfile""1""2""3""4""5"" <<< "ls >"./outfiles/outfile01" >./test_files/invalid_permission >"./outfiles/outfile02"" <<< "ls >./test_files/invalid_permission >"./outfiles/outfile01" >./test_files/invalid_permission" <<< "cat <"./test_files/infile" >"./outfiles/outfile01"" <<< "echo hi >./outfiles/outfile01 | echo bye" <<< "echo hi >./outfiles/outfile01 >./outfiles/outfile02 | echo bye" <<< "echo hi | echo >./outfiles/outfile01 bye" <<< "echo hi | echo bye >./outfiles/outfile01 >./outfiles/outfile02" <<< "echo hi >./outfiles/outfile01 | echo bye >./outfiles/outfile02" <<< "echo hi >./outfiles/outfile01 >./test_files/invalid_permission | echo bye" <<< "echo hi >./test_files/invalid_permission | echo bye" <<< "echo hi >./test_files/invalid_permission >./outfiles/outfile01 | echo bye" <<< "echo hi | echo bye >./test_files/invalid_permission" <<< "echo hi | >./outfiles/outfile01 echo bye >./test_files/invalid_permission" <<< "echo hi | echo bye >./test_files/invalid_permission >./outfiles/outfile01" <<< "cat <"./test_files/infile" >./test_files/invalid_permission" <<< "cat >./test_files/invalid_permission <"./test_files/infile"" <<< "cat <missing >./outfiles/outfile01" <<< "cat >./outfiles/outfile01 <missing" <<< "cat <missing >./test_files/invalid_permission" <<< "cat >./test_files/invalid_permission <missing" <<< "cat >./outfiles/outfile01 <missing >./test_files/invalid_permission" <<< "ls >>./outfiles/outfile01" <<< "ls >>      ./outfiles/outfile01" <<< "ls >>./outfiles/outfile01 >./outfiles/outfile01" <<< "ls >./outfiles/outfile01 >>./outfiles/outfile01" <<< "ls >./outfiles/outfile01 >>./outfiles/outfile01 >./outfiles/outfile02" <<< "ls >>./outfiles/outfile01 >>./outfiles/outfile02" <<< "ls >>./test_files/invalid_permission" <<< "ls >>./test_files/invalid_permission >>./outfiles/outfile01" <<< "ls >>./outfiles/outfile01 >>./test_files/invalid_permission" <<< "ls >./outfiles/outfile01 >>./test_files/invalid_permission >>./outfiles/outfile02" <<< "ls <missing >>./test_files/invalid_permission >>./outfiles/outfile02" <<< "ls >>./test_files/invalid_permission >>./outfiles/outfile02 <missing" <<< "echo hi >>./outfiles/outfile01 | echo bye" <<< "echo hi >>./outfiles/outfile01 >>./outfiles/outfile02 | echo bye" <<< "echo hi | echo >>./outfiles/outfile01 bye" <<< "echo hi | echo bye >>./outfiles/outfile01 >>./outfiles/outfile02" <<< "echo hi >>./outfiles/outfile01 | echo bye >>./outfiles/outfile02" <<< "echo hi >>./test_files/invalid_permission | echo bye" <<< "echo hi >>./test_files/invalid_permission >./outfiles/outfile01 | echo bye" <<< "echo hi | echo bye >>./test_files/invalid_permission" <<< "echo hi | echo >>./outfiles/outfile01 bye >./test_files/invalid_permission" <<< "cat <minishell.h>./outfiles/outfile" <<< "cat <minishell.h|ls" <<< "|" <<< "| echo oi" <<< "| |" <<< "| $" <<< "| >" <<< ">" <<< ">>" <<< ">>>" <<< "<" <<< "<<" <<< "echo hi <" <<< "cat    <| ls" <<< "echo hi | >" <<< "echo hi | > >>" <<< "echo hi | < |" <<< "echo hi |   |" <<< "echo hi |  "|"" <<< "exit 123" <<< "exit 298" <<< "exit +100" <<< "exit "+100"" <<< "exit +"100"" <<< "exit -100" <<< "exit "-100"" <<< "exit -"100"" <<< "exit hello"
 Invalid read of size 1
    at 0x1000069F0: ft_strlen (in ./minishell)
    by 0x100001B05: handle_special_char (tokenizer.c:86)
    by 0x100001FB1: tokenizer (tokenizer.c:137)
    by 0x100000F12: main_loop (main.c:61)
    by 0x100001053: main (main.c:81)
  Address 0x100940a90 is 0 bytes inside a block of size 3 free'd
    at 0x10012D365: free (in /usr/local/Cellar/valgrind/HEAD-d14be1d/libexec/valgrind/vgpreload_memcheck-amd64-darwin.so)
    by 0x100001AFC: handle_special_char (tokenizer.c:85)
    by 0x100001FB1: tokenizer (tokenizer.c:137)
    by 0x100000F12: main_loop (main.c:61)
    by 0x100001053: main (main.c:81)
  Block was alloc'd at
    at 0x10012B505: malloc (in /usr/local/Cellar/valgrind/HEAD-d14be1d/libexec/valgrind/vgpreload_memcheck-amd64-darwin.so)
    by 0x100005F8F: ft_calloc (in ./minishell)
    by 0x100006707: ft_strdup (in ./minishell)
    by 0x10000196D: get_special_char (tokenizer.c:29)
    by 0x100001AB6: handle_special_char (tokenizer.c:83)
    by 0x100001FB1: tokenizer (tokenizer.c:137)
    by 0x100000F12: main_loop (main.c:61)
    by 0x100001053: main (main.c:81)
 
 Invalid read of size 1
    at 0x1000069F0: ft_strlen (in ./minishell)
    by 0x100001B18: handle_special_char (tokenizer.c:87)
    by 0x100001FB1: tokenizer (tokenizer.c:137)
    by 0x100000F12: main_loop (main.c:61)
    by 0x100001053: main (main.c:81)
  Address 0x100940a90 is 0 bytes inside a block of size 3 free'd
    at 0x10012D365: free (in /usr/local/Cellar/valgrind/HEAD-d14be1d/libexec/valgrind/vgpreload_memcheck-amd64-darwin.so)
    by 0x100001AFC: handle_special_char (tokenizer.c:85)
    by 0x100001FB1: tokenizer (tokenizer.c:137)
    by 0x100000F12: main_loop (main.c:61)
    by 0x100001053: main (main.c:81)
  Block was alloc'd at
    at 0x10012B505: malloc (in /usr/local/Cellar/valgrind/HEAD-d14be1d/libexec/valgrind/vgpreload_memcheck-amd64-darwin.so)
    by 0x100005F8F: ft_calloc (in ./minishell)
    by 0x100006707: ft_strdup (in ./minishell)
    by 0x10000196D: get_special_char (tokenizer.c:29)
    by 0x100001AB6: handle_special_char (tokenizer.c:83)
    by 0x100001FB1: tokenizer (tokenizer.c:137)
    by 0x100000F12: main_loop (main.c:61)
    by 0x100001053: main (main.c:81)
 
 Invalid read of size 1
    at 0x10000264F: skip_quotes (token_utils.c:58)
    by 0x1000020B5: handle_space (tokenizer2.c:29)
    by 0x100001FD6: tokenizer (tokenizer.c:139)
    by 0x100000F12: main_loop (main.c:61)
    by 0x100001053: main (main.c:81)
  Address 0x10093d1a8 is 0 bytes after a block of size 5,912 alloc'd
    at 0x10012B505: malloc (in /usr/local/Cellar/valgrind/HEAD-d14be1d/libexec/valgrind/vgpreload_memcheck-amd64-darwin.so)
    by 0x100166C44: xmalloc (in /usr/local/Cellar/readline/8.2.7/lib/libreadline.8.2.dylib)
    by 0x100143FFA: readline_internal_teardown (in /usr/local/Cellar/readline/8.2.7/lib/libreadline.8.2.dylib)
    by 0x100143B18: readline (in /usr/local/Cellar/readline/8.2.7/lib/libreadline.8.2.dylib)
    by 0x100000E56: main_loop (main.c:41)
    by 0x100001053: main (main.c:81)
 
 Conditional jump or move depends on uninitialised value(s)
    at 0x100002659: skip_quotes (token_utils.c:58)
    by 0x1000020B5: handle_space (tokenizer2.c:29)
    by 0x100001FD6: tokenizer (tokenizer.c:139)
    by 0x100000F12: main_loop (main.c:61)
    by 0x100001053: main (main.c:81)
  Uninitialised value was created by a heap allocation
    at 0x10012B505: malloc (in /usr/local/Cellar/valgrind/HEAD-d14be1d/libexec/valgrind/vgpreload_memcheck-amd64-darwin.so)
    by 0x100166C44: xmalloc (in /usr/local/Cellar/readline/8.2.7/lib/libreadline.8.2.dylib)
    by 0x100160EEE: add_history (in /usr/local/Cellar/readline/8.2.7/lib/libreadline.8.2.dylib)
    by 0x100000EA6: main_loop (main.c:50)
    by 0x100001053: main (main.c:81)
 
 Invalid write of size 1
    at 0x100006983: ft_strlcpy (in ./minishell)
    by 0x10000214E: handle_space (tokenizer2.c:33)
    by 0x100001FD6: tokenizer (tokenizer.c:139)
    by 0x100000F12: main_loop (main.c:61)
    by 0x100001053: main (main.c:81)
  Address 0x100988fd0 is 0 bytes after a block of size 4,096 alloc'd
    at 0x10012B505: malloc (in /usr/local/Cellar/valgrind/HEAD-d14be1d/libexec/valgrind/vgpreload_memcheck-amd64-darwin.so)
    by 0x100005F8F: ft_calloc (in ./minishell)
    by 0x100001F22: tokenizer (tokenizer.c:129)
    by 0x100000F12: main_loop (main.c:61)
    by 0x100001053: main (main.c:81)
 

valgrind: m_mallocfree.c:306 (SizeT get_bszB_as_is(Block *)): Assertion 'bszB_lo == bszB_hi' failed.
valgrind: Heap block lo/hi size mismatch: lo = 4160, hi = 8315171486954386547.
This is probably caused by your program erroneously writing past the
end of a heap block and corrupting heap metadata.  If you fix any
invalid writes reported by Memcheck, this assertion failure will
probably go away.  Please try that before reporting this as a bug.


host stacktrace:
    at 0x25804460F: show_sched_status_wrk (in /usr/local/Cellar/valgrind/HEAD-d14be1d/libexec/valgrind/memcheck-amd64-darwin)
    by 0x258044983: report_and_quit (in /usr/local/Cellar/valgrind/HEAD-d14be1d/libexec/valgrind/memcheck-amd64-darwin)
    by 0x258044966: vgPlain_assert_fail (in /usr/local/Cellar/valgrind/HEAD-d14be1d/libexec/valgrind/memcheck-amd64-darwin)
    by 0x25804BBFA: vgPlain_describe_arena_addr (in /usr/local/Cellar/valgrind/HEAD-d14be1d/libexec/valgrind/memcheck-amd64-darwin)
    by 0x25803956B: vgPlain_describe_addr (in /usr/local/Cellar/valgrind/HEAD-d14be1d/libexec/valgrind/memcheck-amd64-darwin)
    by 0x258038314: vgMemCheck_update_Error_extra (in /usr/local/Cellar/valgrind/HEAD-d14be1d/libexec/valgrind/memcheck-amd64-darwin)
    by 0x25803E850: vgPlain_maybe_record_error (in /usr/local/Cellar/valgrind/HEAD-d14be1d/libexec/valgrind/memcheck-amd64-darwin)
    by 0x2580373E3: vgMemCheck_record_address_error (in /usr/local/Cellar/valgrind/HEAD-d14be1d/libexec/valgrind/memcheck-amd64-darwin)
    by 0x25800D0F4: mc_STOREVn_slow (in /usr/local/Cellar/valgrind/HEAD-d14be1d/libexec/valgrind/memcheck-amd64-darwin)
    by 0x7000073B2527: ???
    by 0x700006FB5F3F: ???
    by 0x700006FB5F3F: ???
    by 0x700006A8DCAF: ???

sched status:
  running_tid=1

Thread 1: status = VgTs_Runnable (lwpid 771)
    at 0x1000069A1: ft_strlcpy (in ./minishell)
    by 0x10000214E: handle_space (tokenizer2.c:33)
    by 0x100001FD6: tokenizer (tokenizer.c:139)
    by 0x100000F12: main_loop (main.c:61)
    by 0x100001053: main (main.c:81)
client stack range: [0x10411D000 0x10811BFFF] client SP: 0x10811B6C0
valgrind stack range: [0x700006EB6000 0x700006FB5FFF] top usage: 9792 of 1048576


Note: see also the FAQ in the source distribution.
It contains workarounds to several common problems.
In particular, if Valgrind aborted or crashed after
identifying problems in your program, there's a good chance
that fixing those problems will prevent Valgrind aborting or
crashing, especially if it happened in m_mallocfree.c.

If that doesn't help, please report this bug to: www.valgrind.org

In the bug report, send all the above text, the valgrind
version, and what OS and version you are using.  Thanks.

make: *** [leak] Error 1
